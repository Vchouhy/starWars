{"ast":null,"code":"var _jsxFileName = \"/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/People/People.jsx\",\n  _s = $RefreshSig$();\n// componente react\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../GenericComponents/Card/Card\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./People.scss\";\nimport Modals from \"../../GenericComponents/Modal/Modals\";\nimport { useModal } from \"../../hooks/useModal\";\nimport { getAllPeople } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst People = () => {\n  _s();\n  const people = useSelector(state => state.people);\n  const total = useSelector(state => state.total);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [isOpenModal, openModal, closeModal] = useModal(false);\n  const [currentPage, setCurrentPage] = useState(0);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Llamar al action con el valor de página actual\n    dispatch(getAllPeople(currentPage));\n  }, [dispatch, currentPage]);\n  const totalPages = total; // Obtener el total de páginas desde el state\n  // Verificar si people es undefined o null antes de usar map\n  // if (!people || !people.results) {\n  //   return <div>Loading...</div>; // Mostrar un mensaje de carga mientras se obtienen los datos\n  // }\n\n  const handlePreviousPage = () => {\n    setCurrentPage(prevPage => Math.max(prevPage - 1, 0));\n  };\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => Math.min(prevPage + 1, totalPages - 1));\n  };\n  const handleOpenModal = person => {\n    setSelectedPerson({\n      ...person,\n      isPerson: true\n    });\n    openModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [people.results.map(person => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        name: person.name,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpenModal(person),\n          children: \"OpenDetail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, person._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    }), isOpenModal && selectedPerson && /*#__PURE__*/_jsxDEV(Modals, {\n      isOpen: isOpenModal,\n      closeModal: closeModal,\n      children: selectedPerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousPage,\n        disabled: currentPage === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [currentPage + 1, \" / \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: currentPage === totalPages - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(People, \"9Ym9HfTS9h86y6iyR0BUs2HPrlI=\", false, function () {\n  return [useSelector, useSelector, useModal, useDispatch];\n});\n_c = People;\nexport default People;\nvar _c;\n$RefreshReg$(_c, \"People\");","map":{"version":3,"names":["React","useEffect","useState","Card","useDispatch","useSelector","Modals","useModal","getAllPeople","jsxDEV","_jsxDEV","People","_s","people","state","total","selectedPerson","setSelectedPerson","isOpenModal","openModal","closeModal","currentPage","setCurrentPage","dispatch","totalPages","handlePreviousPage","prevPage","Math","max","handleNextPage","min","handleOpenModal","person","isPerson","className","children","results","map","name","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_id","isOpen","disabled","_c","$RefreshReg$"],"sources":["/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/People/People.jsx"],"sourcesContent":["// componente react\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../../GenericComponents/Card/Card\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./People.scss\";\nimport Modals from \"../../GenericComponents/Modal/Modals\";\nimport { useModal } from \"../../hooks/useModal\";\nimport { getAllPeople } from \"../../redux/actions\";\n\nconst People = () => {\n  const people = useSelector((state) => state.people);\n  const total = useSelector((state=> state.total));\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [isOpenModal, openModal, closeModal] = useModal(false);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Llamar al action con el valor de página actual\n    dispatch(getAllPeople(currentPage));\n  }, [dispatch, currentPage]);\n\n  const totalPages = total; // Obtener el total de páginas desde el state\n  // Verificar si people es undefined o null antes de usar map\n  // if (!people || !people.results) {\n  //   return <div>Loading...</div>; // Mostrar un mensaje de carga mientras se obtienen los datos\n  // }\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 0));\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => Math.min(prevPage + 1, totalPages - 1));\n  };\n\n  const handleOpenModal = (person) => {\n    setSelectedPerson({ ...person, isPerson: true });\n    openModal();\n  };\n\n  return (\n    <div className=\"main-container\">\n      {people.results.map((person) => {\n        return (\n          <Card\n            key={person._id}\n            name={person.name}\n          >\n            <button onClick={() => handleOpenModal(person)}>OpenDetail</button>\n          </Card>\n        );\n      })}\n      {isOpenModal && selectedPerson && (\n        <Modals isOpen={isOpenModal} closeModal={closeModal} >\n          {selectedPerson}\n        </Modals>\n      )}\n\n      {/* Renderizar los botones de paginación */}\n      <div className=\"pagination\">\n        <button onClick={handlePreviousPage} disabled={currentPage === 0}>Previous</button>\n        <span>{currentPage + 1} / {totalPages}</span>\n        <button onClick={handleNextPage} disabled={currentPage === totalPages - 1}>Next</button>\n      </div>\n    </div>\n  );\n}\n\nexport default People;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}