{"ast":null,"code":"var _jsxFileName = \"/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/Films/Films.jsx\",\n  _s = $RefreshSig$();\n// import { useSelector } from 'react-redux';\n// import Card from \"../../GenericComponents/Card/Card\";\n// // import './People.scss'\n// import Modals from \"../../GenericComponents/Modal/Modals\";\n// import { useModal } from \"../../hooks/useModal\";\n// import { useState, useEffect } from \"react\";\n// import SearchBar from \"../../GenericComponents/SearchBar/SerchBar\";\n// import Pagination from \"../../GenericComponents/Pagination/Pagination\";\n\n// const Films = ()=>{\n//     const films = useSelector((state) => state.films);\n\n//     const searchResults = useSelector((state) => state.searchResults.people);\n//     const filmResults = searchResults && searchResults.length ? searchResults : films;\n\n//     const [selectedFilm, setSelectedFilm] = useState(null);\n//     const [isOpenModal, openModal, closeModal] = useModal(false);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [filmPerPage, setFilmPerPage] = useState(8);\n//     const indexOfLastFilm = currentPage * filmPerPage;\n//     const indexOfFirstFilm = indexOfLastFilm - filmPerPage;\n//     const currentFilm = filmResults ? filmResults.slice(indexOfFirstFilm, indexOfLastFilm) : films.slice(indexOfFirstFilm, indexOfLastFilm);\n//     // const [currentFilm, setCurrentFilm] = useState([]);\n\n//     useEffect(() => {\n//       setCurrentPage(1); // Reset currentPage when search results change\n//     }, [filmResults]);\n\n//     const pagination = (pageNumber) => {\n//       setCurrentPage(pageNumber);\n//     };\n\n//     const handleOpenModal = (film) => {\n//       setSelectedFilm({...film, isFilm: true});\n//       openModal();\n//     };\n\n//     return (\n//       <>\n//       <div className=\"main-container\">\n//          <SearchBar prop=\"films\"></SearchBar>\n//         {currentFilm.map((film) => {\n//           return (\n//             <Card\n//               key={film._id}\n//               name={film.title}\n\n//             >\n//               <button onClick={() => handleOpenModal(film)}>OpenDetail</button>\n//             </Card>\n//           );\n//         })}\n//         {isOpenModal && selectedFilm && (\n//           <Modals isOpen={isOpenModal} closeModal={closeModal} >\n//             {selectedFilm}\n\n//           </Modals>\n//         )}\n//       </div>\n//          <Pagination\n//         propPerPage={filmPerPage}\n//         length={films.length}\n//         pagination={pagination}\n//         currentPage={currentPage}\n//       />\n//       </>\n//     );\n//   };\n\n// export default Films;\nimport React, { useState } from \"react\";\nimport Card from \"../../GenericComponents/Card/Card\";\nimport { useSelector } from \"react-redux\";\nimport Modals from \"../../GenericComponents/Modal/Modals\";\nimport { useModal } from \"../../hooks/useModal\";\nimport Pagination from \"../../GenericComponents/Pagination/Pagination\";\nimport SearchBar from \"../../GenericComponents/SearchBar/SerchBar\";\nimport \"./Films.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Films = () => {\n  _s();\n  const searchResults = useSelector(state => state.searchResults.people);\n  const films = useSelector(state => state.films);\n  const filmResults = searchResults && searchResults.length ? searchResults : films;\n  const [selectedFilm, setSelectedFilm] = useState(null);\n  const [isOpenModal, openModal, closeModal] = useModal(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filmPerPage, setFilmPerPage] = useState(8);\n  const indexOfLastFilm = currentPage * filmPerPage;\n  const indexOfFirstFilm = indexOfLastFilm - filmPerPage;\n  const currentFilm = filmResults ? filmResults.slice(indexOfFirstFilm, indexOfLastFilm) : films.slice(indexOfFirstFilm, indexOfLastFilm);\n  const handleOpenModal = film => {\n    setSelectedFilm({\n      ...film,\n      isFilm: true\n    });\n    openModal();\n  };\n  const pagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"films-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        prop: \"films\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), currentFilm.map(film => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: film.title,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOpenModal(film),\n            children: \"OpenDetail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, film._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this);\n      }), isOpenModal && selectedFilm && /*#__PURE__*/_jsxDEV(Modals, {\n        isOpen: isOpenModal,\n        closeModal: closeModal,\n        children: [selectedFilm.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      propPerPage: filmPerPage,\n      length: films.length,\n      pagination: pagination,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Films, \"O8SBd9z5zjUT3+g1n1KlmpS4iJM=\", false, function () {\n  return [useSelector, useSelector, useModal];\n});\n_c = Films;\nexport default Films;\nvar _c;\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"names":["React","useState","Card","useSelector","Modals","useModal","Pagination","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Films","_s","searchResults","state","people","films","filmResults","length","selectedFilm","setSelectedFilm","isOpenModal","openModal","closeModal","currentPage","setCurrentPage","filmPerPage","setFilmPerPage","indexOfLastFilm","indexOfFirstFilm","currentFilm","slice","handleOpenModal","film","isFilm","pagination","pageNumber","children","className","prop","fileName","_jsxFileName","lineNumber","columnNumber","map","name","title","onClick","_id","isOpen","propPerPage","_c","$RefreshReg$"],"sources":["/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/Films/Films.jsx"],"sourcesContent":["// import { useSelector } from 'react-redux';\n// import Card from \"../../GenericComponents/Card/Card\";\n// // import './People.scss'\n// import Modals from \"../../GenericComponents/Modal/Modals\";\n// import { useModal } from \"../../hooks/useModal\";\n// import { useState, useEffect } from \"react\";\n// import SearchBar from \"../../GenericComponents/SearchBar/SerchBar\";\n// import Pagination from \"../../GenericComponents/Pagination/Pagination\";\n\n// const Films = ()=>{\n//     const films = useSelector((state) => state.films);\n\n//     const searchResults = useSelector((state) => state.searchResults.people);\n//     const filmResults = searchResults && searchResults.length ? searchResults : films;\n  \n//     const [selectedFilm, setSelectedFilm] = useState(null);\n//     const [isOpenModal, openModal, closeModal] = useModal(false);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [filmPerPage, setFilmPerPage] = useState(8);\n//     const indexOfLastFilm = currentPage * filmPerPage;\n//     const indexOfFirstFilm = indexOfLastFilm - filmPerPage;\n//     const currentFilm = filmResults ? filmResults.slice(indexOfFirstFilm, indexOfLastFilm) : films.slice(indexOfFirstFilm, indexOfLastFilm);\n//     // const [currentFilm, setCurrentFilm] = useState([]);\n\n//     useEffect(() => {\n//       setCurrentPage(1); // Reset currentPage when search results change\n//     }, [filmResults]);\n\n//     const pagination = (pageNumber) => {\n//       setCurrentPage(pageNumber);\n//     };\n\n//     const handleOpenModal = (film) => {\n//       setSelectedFilm({...film, isFilm: true});\n//       openModal();\n//     };\n\n//     return (\n//       <>\n//       <div className=\"main-container\">\n//          <SearchBar prop=\"films\"></SearchBar>\n//         {currentFilm.map((film) => {\n//           return (\n//             <Card\n//               key={film._id}\n//               name={film.title}\n             \n//             >\n//               <button onClick={() => handleOpenModal(film)}>OpenDetail</button>\n//             </Card>\n//           );\n//         })}\n//         {isOpenModal && selectedFilm && (\n//           <Modals isOpen={isOpenModal} closeModal={closeModal} >\n//             {selectedFilm}\n            \n//           </Modals>\n//         )}\n//       </div>\n//          <Pagination\n//         propPerPage={filmPerPage}\n//         length={films.length}\n//         pagination={pagination}\n//         currentPage={currentPage}\n//       />\n//       </>\n//     );\n//   };\n\n\n// export default Films;\nimport React, { useState } from \"react\";\nimport Card from \"../../GenericComponents/Card/Card\";\nimport { useSelector } from \"react-redux\";\nimport Modals from \"../../GenericComponents/Modal/Modals\";\nimport { useModal } from \"../../hooks/useModal\";\nimport Pagination from \"../../GenericComponents/Pagination/Pagination\";\nimport SearchBar from \"../../GenericComponents/SearchBar/SerchBar\";\nimport \"./Films.scss\";\n\nconst Films = () => {\n  const searchResults = useSelector((state) => state.searchResults.people);\n  const films = useSelector((state) => state.films);\n  const filmResults = searchResults && searchResults.length ? searchResults : films;\n\n  const [selectedFilm, setSelectedFilm] = useState(null);\n  const [isOpenModal, openModal, closeModal] = useModal(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filmPerPage, setFilmPerPage] = useState(8);\n  const indexOfLastFilm = currentPage * filmPerPage;\n  const indexOfFirstFilm = indexOfLastFilm - filmPerPage;\n  const currentFilm = filmResults ? filmResults.slice(indexOfFirstFilm, indexOfLastFilm) : films.slice(indexOfFirstFilm, indexOfLastFilm);\n\n  const handleOpenModal = (film) => {\n    setSelectedFilm({ ...film, isFilm: true });\n    openModal();\n  };\n\n  const pagination = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <>\n      <div className=\"films-main-container\">\n        <SearchBar prop=\"films\" />\n        {currentFilm.map((film) => {\n          return (\n            <Card key={film._id} name={film.title}>\n              <button onClick={() => handleOpenModal(film)}>OpenDetail</button>\n            </Card>\n          );\n        })}\n        {isOpenModal && selectedFilm && (\n          <Modals isOpen={isOpenModal} closeModal={closeModal}>\n            {selectedFilm.title} {/* Aquí puedes acceder a otras propiedades de la película */}\n          </Modals>\n        )}\n      </div>\n      <Pagination propPerPage={filmPerPage} length={films.length} pagination={pagination} currentPage={currentPage} />\n    </>\n  );\n};\n\nexport default Films;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}