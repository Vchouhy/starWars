{"ast":null,"code":"var _jsxFileName = \"/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/Vehicles/Vehicles.jsx\",\n  _s = $RefreshSig$();\n// import Card from \"../../GenericComponents/Card/Card\";\n// import { useSelector } from 'react-redux';\n// // import './People.scss'\n// import Modals from \"../../GenericComponents/Modal/Modals\";\n// import { useModal } from \"../../hooks/useModal\";\n// import { useState } from \"react\";\n// import Pagination from \"../../GenericComponents/Pagination/Pagination\";\n// import SearchBar from \"../../GenericComponents/SearchBar/SerchBar\";\n\n// const Vehicles = ()=>{\n//     const vehicles = useSelector((state) => state.vehicles);\n\n//     const [selectedVehicle, setselectedVehicle] = useState(null);\n//     const [isOpenModal, openModal, closeModal] = useModal(false);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [vehiclePerPage, setVehiclePerPage] = useState(8);\n//     const indexOfLastVehicle = currentPage * vehiclePerPage;\n//     const indexOfFirstVehicle = indexOfLastVehicle - vehiclePerPage;\n//     console.log(vehicles)\n//     const currentVehicle = vehicles.slice(indexOfFirstVehicle, indexOfLastVehicle);\n\n//     const handleOpenModal = (vehicles) => {\n//       setselectedVehicle({...vehicles, isVehicle: true});\n//       openModal();\n//     };\n\n//     const pagination = (pageNumber) => {\n//       setCurrentPage(pageNumber);\n//     };\n\n//     return (\n//       <>\n//       <SearchBar prop='vehicles'></SearchBar>\n//       <div className=\"main-container\">\n//         {currentVehicle.map((vehicle) => {\n//           return (\n//             <Card\n//               key={vehicle._id}\n//               name={vehicle.name}\n\n//             >\n//               <button onClick={() => handleOpenModal(vehicle)}>OpenDetail</button>\n//             </Card>\n//           );\n//         })}\n//         {isOpenModal && selectedVehicle && (\n//           <Modals isOpen={isOpenModal} closeModal={closeModal} >\n//             {selectedVehicle}\n\n//           </Modals>\n//         )}\n//       </div>\n//       <Pagination\n//           propPerPage={vehiclePerPage}\n//           length={vehicles.length}\n//           pagination={pagination}\n//           currentPage={currentPage}\n//         />\n//       </>\n//     );\n//   };\n\n// export default Vehicles;\n\nimport Card from \"../../GenericComponents/Card/Card\";\nimport { useSelector } from 'react-redux';\nimport Modals from \"../../GenericComponents/Modal/Modals\";\nimport { useModal } from \"../../hooks/useModal\";\nimport { useState } from \"react\";\nimport Pagination from \"../../GenericComponents/Pagination/Pagination\";\nimport SearchBar from \"../../GenericComponents/SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Vehicles = () => {\n  _s();\n  const searchResults = useSelector(state => state.searchResults);\n  const vehicles = useSelector(state => state.vehicles);\n  const vehiclesResults = searchResults.vehicles.length ? searchResults.vehicles : vehicles;\n  console.log(vehiclesResults);\n  const [selectedVehicle, setselectedVehicle] = useState(null);\n  const [isOpenModal, openModal, closeModal] = useModal(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [vehiclePerPage, setVehiclePerPage] = useState(8);\n  const indexOfLastVehicle = currentPage * vehiclePerPage;\n  const indexOfFirstVehicle = indexOfLastVehicle - vehiclePerPage;\n  const currentVehicle = vehicles.slice(indexOfFirstVehicle, indexOfLastVehicle);\n  const handleOpenModal = vehicle => {\n    setselectedVehicle({\n      ...vehicle,\n      isVehicle: true\n    });\n    openModal();\n  };\n  const pagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      prop: \"vehicles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [currentVehicle.map(vehicle => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: vehicle.name,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOpenModal(vehicle),\n            children: \"OpenDetail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, vehicle._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      }), isOpenModal && selectedVehicle && /*#__PURE__*/_jsxDEV(Modals, {\n        isOpen: isOpenModal,\n        closeModal: closeModal,\n        children: [selectedVehicle.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      propPerPage: vehiclePerPage,\n      length: vehicles.length,\n      pagination: pagination,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Vehicles, \"NxP2IYDydyaOKtxEHIuIDc0Yc7w=\", false, function () {\n  return [useSelector, useSelector, useModal];\n});\n_c = Vehicles;\nexport default Vehicles;\nvar _c;\n$RefreshReg$(_c, \"Vehicles\");","map":{"version":3,"names":["Card","useSelector","Modals","useModal","useState","Pagination","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Vehicles","_s","searchResults","state","vehicles","vehiclesResults","length","console","log","selectedVehicle","setselectedVehicle","isOpenModal","openModal","closeModal","currentPage","setCurrentPage","vehiclePerPage","setVehiclePerPage","indexOfLastVehicle","indexOfFirstVehicle","currentVehicle","slice","handleOpenModal","vehicle","isVehicle","pagination","pageNumber","children","prop","fileName","_jsxFileName","lineNumber","columnNumber","className","map","name","onClick","_id","isOpen","propPerPage","_c","$RefreshReg$"],"sources":["/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/Vehicles/Vehicles.jsx"],"sourcesContent":["// import Card from \"../../GenericComponents/Card/Card\";\n// import { useSelector } from 'react-redux';\n// // import './People.scss'\n// import Modals from \"../../GenericComponents/Modal/Modals\";\n// import { useModal } from \"../../hooks/useModal\";\n// import { useState } from \"react\";\n// import Pagination from \"../../GenericComponents/Pagination/Pagination\";\n// import SearchBar from \"../../GenericComponents/SearchBar/SerchBar\";\n\n// const Vehicles = ()=>{\n//     const vehicles = useSelector((state) => state.vehicles);\n\n//     const [selectedVehicle, setselectedVehicle] = useState(null);\n//     const [isOpenModal, openModal, closeModal] = useModal(false);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [vehiclePerPage, setVehiclePerPage] = useState(8);\n//     const indexOfLastVehicle = currentPage * vehiclePerPage;\n//     const indexOfFirstVehicle = indexOfLastVehicle - vehiclePerPage;\n//     console.log(vehicles)\n//     const currentVehicle = vehicles.slice(indexOfFirstVehicle, indexOfLastVehicle);\n\n//     const handleOpenModal = (vehicles) => {\n//       setselectedVehicle({...vehicles, isVehicle: true});\n//       openModal();\n//     };\n\n//     const pagination = (pageNumber) => {\n//       setCurrentPage(pageNumber);\n//     };\n\n//     return (\n//       <>\n//       <SearchBar prop='vehicles'></SearchBar>\n//       <div className=\"main-container\">\n//         {currentVehicle.map((vehicle) => {\n//           return (\n//             <Card\n//               key={vehicle._id}\n//               name={vehicle.name}\n             \n//             >\n//               <button onClick={() => handleOpenModal(vehicle)}>OpenDetail</button>\n//             </Card>\n//           );\n//         })}\n//         {isOpenModal && selectedVehicle && (\n//           <Modals isOpen={isOpenModal} closeModal={closeModal} >\n//             {selectedVehicle}\n            \n//           </Modals>\n//         )}\n//       </div>\n//       <Pagination\n//           propPerPage={vehiclePerPage}\n//           length={vehicles.length}\n//           pagination={pagination}\n//           currentPage={currentPage}\n//         />\n//       </>\n//     );\n//   };\n\n\n// export default Vehicles;\n\n\nimport Card from \"../../GenericComponents/Card/Card\";\nimport { useSelector } from 'react-redux';\nimport Modals from \"../../GenericComponents/Modal/Modals\";\nimport { useModal } from \"../../hooks/useModal\";\nimport { useState } from \"react\";\nimport Pagination from \"../../GenericComponents/Pagination/Pagination\";\nimport SearchBar from \"../../GenericComponents/SearchBar/SearchBar\";\n\nconst Vehicles = () => {\n  const searchResults = useSelector((state) => state.searchResults);\n  const vehicles = useSelector((state) => state.vehicles);\n  const vehiclesResults = searchResults.vehicles.length ? searchResults.vehicles : vehicles;\n  console.log(vehiclesResults)\n\n  const [selectedVehicle, setselectedVehicle] = useState(null);\n  const [isOpenModal, openModal, closeModal] = useModal(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [vehiclePerPage, setVehiclePerPage] = useState(8);\n  const indexOfLastVehicle = currentPage * vehiclePerPage;\n  const indexOfFirstVehicle = indexOfLastVehicle - vehiclePerPage;\n  const currentVehicle = vehicles.slice(indexOfFirstVehicle, indexOfLastVehicle);\n\n  const handleOpenModal = (vehicle) => {\n    setselectedVehicle({ ...vehicle, isVehicle: true });\n    openModal();\n  };\n\n  const pagination = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <>\n      <SearchBar prop='vehicles' />\n      <div className=\"main-container\">\n        {currentVehicle.map((vehicle) => {\n          return (\n            <Card key={vehicle._id} name={vehicle.name}>\n              <button onClick={() => handleOpenModal(vehicle)}>OpenDetail</button>\n            </Card>\n          );\n        })}\n        {isOpenModal && selectedVehicle && (\n          <Modals isOpen={isOpenModal} closeModal={closeModal}>\n            {selectedVehicle.name} {/* Here you can access other properties of the vehicle */}\n          </Modals>\n        )}\n      </div>\n      <Pagination propPerPage={vehiclePerPage} length={vehicles.length} pagination={pagination} currentPage={currentPage} />\n    </>\n  );\n};\n\nexport default Vehicles;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}