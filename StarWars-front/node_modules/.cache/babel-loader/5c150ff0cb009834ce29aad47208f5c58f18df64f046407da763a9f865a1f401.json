{"ast":null,"code":"var _jsxFileName = \"/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/Planets/Planets.jsx\",\n  _s = $RefreshSig$();\nimport Card from \"../../GenericComponents/Card/Card\";\nimport { useSelector } from 'react-redux';\n// import './People.scss'\nimport Modals from \"../../GenericComponents/Modal/Modals\";\nimport { useModal } from \"../../hooks/useModal\";\nimport React, { useState, useEffect } from \"react\";\nimport Pagination from \"../../GenericComponents/Pagination/Pagination\";\nimport SearchBar from \"../../GenericComponents/SearchBar/SerchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const planets = useSelector(state => state.planets);\n  const searchResults = useSelector(state => state.searchResults.planets);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const [isOpenModal, openModal, closeModal] = useModal(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [planetPerPage, setPlanetPerPage] = useState(8);\n  useEffect(() => {\n    setCurrentPage(1); // Reset currentPage when searchResults change to show first page of search results\n  }, [searchResults]);\n  const indexOfLastPlanet = currentPage * planetPerPage;\n  const indexOfFirstPlanet = indexOfLastPlanet - planetPerPage;\n  console.log(searchResults);\n  // const currentPlanet = searchResults?.length > 0 ? searchResults.slice(indexOfFirstPlanet, indexOfLastPlanet) : planets.slice(indexOfFirstPlanet, indexOfLastPlanet);\n  const currentPlanet = searchResults && searchResults.length > 0 ? searchResults.slice(indexOfFirstPlanet, indexOfLastPlanet) : planets.slice(indexOfFirstPlanet, indexOfLastPlanet);\n  console.log('currentPlanet:', currentPlanet);\n  const handleOpenModal = planet => {\n    setSelectedPlanet({\n      ...planet,\n      isPlanet: true\n    });\n    openModal();\n  };\n  const pagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        prop: \"planets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), currentPlanet.map(planet => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: planet.name,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOpenModal(planet),\n            children: \"OpenDetail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, planet._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      }), isOpenModal && selectedPlanet && /*#__PURE__*/_jsxDEV(Modals, {\n        isOpen: isOpenModal,\n        closeModal: closeModal,\n        children: selectedPlanet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      propPerPage: planetPerPage,\n      length: planets.length,\n      pagination: pagination,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Planets, \"lwvhCmVDRjizoLV9FFmzXDTu0fw=\", false, function () {\n  return [useSelector, useSelector, useModal];\n});\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["Card","useSelector","Modals","useModal","React","useState","useEffect","Pagination","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Planets","_s","planets","state","searchResults","selectedPlanet","setSelectedPlanet","isOpenModal","openModal","closeModal","currentPage","setCurrentPage","planetPerPage","setPlanetPerPage","indexOfLastPlanet","indexOfFirstPlanet","console","log","currentPlanet","length","slice","handleOpenModal","planet","isPlanet","pagination","pageNumber","children","className","prop","fileName","_jsxFileName","lineNumber","columnNumber","map","name","onClick","_id","isOpen","propPerPage","_c","$RefreshReg$"],"sources":["/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/Planets/Planets.jsx"],"sourcesContent":["import Card from \"../../GenericComponents/Card/Card\";\nimport { useSelector } from 'react-redux';\n// import './People.scss'\nimport Modals from \"../../GenericComponents/Modal/Modals\";\nimport { useModal } from \"../../hooks/useModal\";\nimport React, { useState, useEffect } from \"react\";\nimport Pagination from \"../../GenericComponents/Pagination/Pagination\";\nimport SearchBar from \"../../GenericComponents/SearchBar/SerchBar\";\n\nconst Planets = ()=>{\n    const planets = useSelector((state) => state.planets);\n    const searchResults = useSelector((state) => state.searchResults.planets);\n    const [selectedPlanet, setSelectedPlanet] = useState(null);\n    const [isOpenModal, openModal, closeModal] = useModal(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [planetPerPage, setPlanetPerPage] = useState(8);\n\n    useEffect(() => {\n      setCurrentPage(1); // Reset currentPage when searchResults change to show first page of search results\n    }, [searchResults]);\n    \n    const indexOfLastPlanet = currentPage * planetPerPage;\n    const indexOfFirstPlanet = indexOfLastPlanet - planetPerPage;\n    console.log(searchResults)\n    // const currentPlanet = searchResults?.length > 0 ? searchResults.slice(indexOfFirstPlanet, indexOfLastPlanet) : planets.slice(indexOfFirstPlanet, indexOfLastPlanet);\n    const currentPlanet = (searchResults && searchResults.length > 0) ? searchResults.slice(indexOfFirstPlanet, indexOfLastPlanet) : planets.slice(indexOfFirstPlanet, indexOfLastPlanet);\n    console.log('currentPlanet:',currentPlanet)\n\n    const handleOpenModal = (planet) => {\n      setSelectedPlanet({...planet, isPlanet: true});\n      openModal();\n    };\n\n    const pagination = (pageNumber) => {\n      setCurrentPage(pageNumber);\n    };\n\n    return (\n      <>\n      <div className=\"main-container\">\n      <SearchBar prop='planets'></SearchBar>\n        {currentPlanet.map((planet) => {\n          return (\n            <Card\n              key={planet._id}\n              name={planet.name}\n             \n            >\n              <button onClick={() => handleOpenModal(planet)}>OpenDetail</button>\n            </Card>\n          );\n        })}\n        {isOpenModal && selectedPlanet && (\n          <Modals isOpen={isOpenModal} closeModal={closeModal} >\n            {selectedPlanet}\n            \n          </Modals>\n        )}\n      </div>\n      <Pagination\n          propPerPage={planetPerPage}\n          length={planets.length}\n          pagination={pagination}\n          currentPage={currentPage}\n        />\n      </>\n    );\n  };\n\n\nexport default Planets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}