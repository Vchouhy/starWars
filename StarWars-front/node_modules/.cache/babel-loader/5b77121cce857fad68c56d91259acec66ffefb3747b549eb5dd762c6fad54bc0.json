{"ast":null,"code":"import axios from \"axios\";\nexport const GET_PEOPLE = \"GET_PEOPLE\";\nexport const GET_PLANETS = \"GET_PLANETS\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const GET_FILMS = \"GET_FILMS\";\nexport const PEOPLE_ID = \"PEOPLE_ID\";\nexport const SEARCH_ITEMS = \"SEARCH_ITEMS\";\n\n//Section PEOPLE\n\nexport const getAllPeople = () => {\n  return async function (dispatch) {\n    try {\n      const apiData = await axios.get(`http://localhost:5001/people`);\n      const peopleData = apiData.data;\n      // console.log(peopleData)\n      dispatch({\n        type: GET_PEOPLE,\n        payload: peopleData\n      });\n    } catch (error) {\n      console.log('Error', error);\n    }\n  };\n};\n\n//Section PLANETS\nexport const getAllPlanets = () => {\n  return async function (dispatch) {\n    const apiData = await axios.get(\"http://localhost:5001/planets\");\n    const planets = apiData.data;\n    dispatch({\n      type: GET_PLANETS,\n      payload: planets\n    });\n  };\n};\n\n//Section VEHICLES\nexport const getAllVehicles = () => {\n  return async function (dispatch) {\n    const apiData = await axios.get(\"http://localhost:5001/vehicles\");\n    const user = apiData.data;\n    dispatch({\n      type: GET_VEHICLES,\n      payload: user\n    });\n  };\n};\n\n//Section FILMS\nexport const getAllFilms = () => {\n  return async function (dispatch) {\n    const apiData = await axios.get(\"http://localhost:5001/films\");\n    const user = apiData.data;\n    dispatch({\n      type: GET_FILMS,\n      payload: user\n    });\n  };\n};\n\n//Section GRAL\n\nexport const searchItems = (searchQuery, prop) => {\n  return async function (dispatch) {\n    const apiData = await axios.get(`http://localhost:5001/${prop}/search?search=${searchQuery}`);\n    const result = apiData.data;\n    console.log(result);\n    // dispatch({type: SEARCH_ITEMS, payload: result})\n  };\n};","map":{"version":3,"names":["axios","GET_PEOPLE","GET_PLANETS","GET_VEHICLES","GET_FILMS","PEOPLE_ID","SEARCH_ITEMS","getAllPeople","dispatch","apiData","get","peopleData","data","type","payload","error","console","log","getAllPlanets","planets","getAllVehicles","user","getAllFilms","searchItems","searchQuery","prop","result"],"sources":["/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/redux/actions.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const GET_PEOPLE = \"GET_PEOPLE\"\nexport const GET_PLANETS = \"GET_PLANETS\"\nexport const GET_VEHICLES = \"GET_VEHICLES\"\nexport const GET_FILMS = \"GET_FILMS\"\nexport const PEOPLE_ID = \"PEOPLE_ID\"\nexport const SEARCH_ITEMS = \"SEARCH_ITEMS\"\n\n//Section PEOPLE\n\nexport const getAllPeople = () => {\n   return async function (dispatch) {\n     try {\n       const apiData = await axios.get(\n         `http://localhost:5001/people`\n       );\n      const peopleData = apiData.data;\n      // console.log(peopleData)\n      dispatch({ type: GET_PEOPLE, payload: peopleData });\n      \n     } catch (error) {\n       console.log('Error', error);\n     }\n   };\n };\n\n\n//Section PLANETS\nexport const getAllPlanets = () => {\n   return async function(dispatch){\n    const apiData = await axios.get(\"http://localhost:5001/planets\")\n    \n    const planets = apiData.data;\n\n    dispatch({type: GET_PLANETS, payload: planets})\n   }\n};\n\n\n//Section VEHICLES\nexport const getAllVehicles = () => {\n   return async function(dispatch){\n    const apiData = await axios.get(\"http://localhost:5001/vehicles\")\n    \n    const user = apiData.data;\n\n    dispatch({type: GET_VEHICLES, payload: user})\n   }\n};\n\n\n//Section FILMS\nexport const getAllFilms = () => {\n   return async function(dispatch){\n    const apiData = await axios.get(\"http://localhost:5001/films\")\n    \n    const user = apiData.data;\n\n    dispatch({type: GET_FILMS, payload: user})\n   }\n};\n\n//Section GRAL\n\nexport const searchItems = (searchQuery, prop) => {\n return async function(dispatch){\n    const apiData = await axios.get(`http://localhost:5001/${prop}/search?search=${searchQuery}`);\n    const result = apiData.data;\n    console.log(result)\n    // dispatch({type: SEARCH_ITEMS, payload: result})\n\n }\n};\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,YAAY,GAAG,cAAc;;AAE1C;;AAEA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAC/B,OAAO,gBAAgBC,QAAQ,EAAE;IAC/B,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC5B,8BACH,CAAC;MACF,MAAMC,UAAU,GAAGF,OAAO,CAACG,IAAI;MAC/B;MACAJ,QAAQ,CAAC;QAAEK,IAAI,EAAEZ,UAAU;QAAEa,OAAO,EAAEH;MAAW,CAAC,CAAC;IAEpD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC7B;EACF,CAAC;AACH,CAAC;;AAGF;AACA,OAAO,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAChC,OAAO,gBAAeV,QAAQ,EAAC;IAC9B,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,+BAA+B,CAAC;IAEhE,MAAMS,OAAO,GAAGV,OAAO,CAACG,IAAI;IAE5BJ,QAAQ,CAAC;MAACK,IAAI,EAAEX,WAAW;MAAEY,OAAO,EAAEK;IAAO,CAAC,CAAC;EAChD,CAAC;AACJ,CAAC;;AAGD;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACjC,OAAO,gBAAeZ,QAAQ,EAAC;IAC9B,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,gCAAgC,CAAC;IAEjE,MAAMW,IAAI,GAAGZ,OAAO,CAACG,IAAI;IAEzBJ,QAAQ,CAAC;MAACK,IAAI,EAAEV,YAAY;MAAEW,OAAO,EAAEO;IAAI,CAAC,CAAC;EAC9C,CAAC;AACJ,CAAC;;AAGD;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC9B,OAAO,gBAAed,QAAQ,EAAC;IAC9B,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC;IAE9D,MAAMW,IAAI,GAAGZ,OAAO,CAACG,IAAI;IAEzBJ,QAAQ,CAAC;MAACK,IAAI,EAAET,SAAS;MAAEU,OAAO,EAAEO;IAAI,CAAC,CAAC;EAC3C,CAAC;AACJ,CAAC;;AAED;;AAEA,OAAO,MAAME,WAAW,GAAGA,CAACC,WAAW,EAAEC,IAAI,KAAK;EACjD,OAAO,gBAAejB,QAAQ,EAAC;IAC5B,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,yBAAwBe,IAAK,kBAAiBD,WAAY,EAAC,CAAC;IAC7F,MAAME,MAAM,GAAGjB,OAAO,CAACG,IAAI;IAC3BI,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC;IACnB;EAEH,CAAC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}