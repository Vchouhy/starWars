{"ast":null,"code":"var _jsxFileName = \"/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/People/People.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from \"../../GenericComponents/Card/Card\";\nimport './People.scss';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst People = () => {\n  _s();\n  const people = useSelector(state => state.people);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const openModal = person => {\n    setSelectedPerson(person);\n  };\n  const closeModal = () => {\n    setSelectedPerson(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [people.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => openModal(person),\n      children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n        name: person.name,\n        films: person.films,\n        birth_year: person.birth_year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, person._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), selectedPerson &&\n    /*#__PURE__*/\n    // Renderizar el modal solo si selectedPerson tiene valor\n    _jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closeModal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          name: selectedPerson.name,\n          films: selectedPerson.films,\n          birth_year: selectedPerson.birth_year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(People, \"fuvLX7Ln+Yo+p9YC7OSGDh/+hMs=\", false, function () {\n  return [useSelector];\n});\n_c = People;\nexport default People;\nvar _c;\n$RefreshReg$(_c, \"People\");","map":{"version":3,"names":["React","useState","Card","useSelector","jsxDEV","_jsxDEV","People","_s","people","state","selectedPerson","setSelectedPerson","openModal","person","closeModal","className","children","map","onClick","name","films","birth_year","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["/Users/mavictoriachouhy/Desktop/Training/Conexa/StarWars-front/src/Components/People/People.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from \"../../GenericComponents/Card/Card\";\nimport './People.scss';\nimport { useSelector } from 'react-redux';\n\nconst People = () => {\n  const people = useSelector((state) => state.people);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n\n  const openModal = (person) => {\n    setSelectedPerson(person);\n  };\n\n  const closeModal = () => {\n    setSelectedPerson(null);\n  };\n\n  return (\n    <div className=\"main-container\">\n      {people.map((person) => (\n        <div key={person._id} onClick={() => openModal(person)}> {/* Agrega onClick para abrir el modal */}\n          <Card\n            name={person.name}\n            films={person.films}\n            birth_year={person.birth_year}\n          />\n        </div>\n      ))}\n      {selectedPerson && (\n        // Renderizar el modal solo si selectedPerson tiene valor\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <button className=\"close-button\" onClick={closeModal}>\n              X\n            </button>\n            <Card\n              name={selectedPerson.name}\n              films={selectedPerson.films}\n              birth_year={selectedPerson.birth_year}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default People;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mCAAmC;AACpD,OAAO,eAAe;AACtB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,MAAM,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,MAAM,CAAC;EACnD,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMW,SAAS,GAAIC,MAAM,IAAK;IAC5BF,iBAAiB,CAACE,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBH,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACEN,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAC5BR,MAAM,CAACS,GAAG,CAAEJ,MAAM,iBACjBR,OAAA;MAAsBa,OAAO,EAAEA,CAAA,KAAMN,SAAS,CAACC,MAAM,CAAE;MAAAG,QAAA,GAAC,GAAC,eACvDX,OAAA,CAACH,IAAI;QACHiB,IAAI,EAAEN,MAAM,CAACM,IAAK;QAClBC,KAAK,EAAEP,MAAM,CAACO,KAAM;QACpBC,UAAU,EAAER,MAAM,CAACQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA,GALMZ,MAAM,CAACa,GAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACN,CAAC,EACDf,cAAc;IAAA;IACb;IACAL,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BX,OAAA;QAAKU,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpBX,OAAA;UAAQU,SAAS,EAAC,cAAc;UAACG,OAAO,EAAEJ,UAAW;UAAAE,QAAA,EAAC;QAEtD;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTpB,OAAA,CAACH,IAAI;UACHiB,IAAI,EAAET,cAAc,CAACS,IAAK;UAC1BC,KAAK,EAAEV,cAAc,CAACU,KAAM;UAC5BC,UAAU,EAAEX,cAAc,CAACW;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxCID,MAAM;EAAA,QACKH,WAAW;AAAA;AAAAwB,EAAA,GADtBrB,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}